<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<!-- 配置数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/tuandai"></property>
		<property name="username" value="root"></property>
		<property name="password" value="root"></property>
	</bean>
	<!-- 会话工厂 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 工厂的属性名为dataSource，根据ref引用名dataSource查找相应id为此名的bean数据源 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 找到本地的配置文件 classpath：mybatis-config.xml文件 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>
	<!-- 扫描器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描那个包  *代表所有，完整包名 -->
		<property name="basePackage" value="dao"></property>
	</bean>
	<!-- 在业务层调用的方法上加上@Transactional注解（必须为public方法才行,不要捕捉异常，要让异常自动抛出，否则不能进行事务回滚。方法要写在服务层中在controller中无效） -->
	<!-- 配置事务管理器 -->
    <bean id="transactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <!-- 注解方式配置事务  注意头信息也需要配置-->
    <tx:annotation-driven transaction-manager="transactionManager" />
</beans>